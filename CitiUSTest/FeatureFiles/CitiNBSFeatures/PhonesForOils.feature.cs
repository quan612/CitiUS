// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CitiUSTest.FeatureFiles.CitiNBSFeatures
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NbsPhonesForOils")]
    [NUnit.Framework.CategoryAttribute("Placement")]
    [NUnit.Framework.CategoryAttribute("Phones")]
    [NUnit.Framework.CategoryAttribute("OILS")]
    [NUnit.Framework.CategoryAttribute("epic:84633")]
    public partial class NbsPhonesForOilsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "Placement",
                "Phones",
                "OILS",
                "epic:84633"};
        
#line 1 "PhonesForOils.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "NbsPhonesForOils", "\tTo test the loading of phone for new account loaded into the system for Citi OIL" +
                    "S accounts\t", ProgrammingLanguage.CSharp, new string[] {
                        "Placement",
                        "Phones",
                        "OILS",
                        "epic:84633"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
#line 6
 testRunner.Given("The user creates a Citi NBS based on the sample file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table463 = new TechTalk.SpecFlow.Table(new string[] {
                        "MIOCode",
                        "ListDate"});
            table463.AddRow(new string[] {
                        "OILS",
                        "2019/08/15"});
#line 7
  testRunner.And("The user modifies the header record with credentials:", ((string)(null)), table463, "And ");
#line hidden
            TechTalk.SpecFlow.Table table464 = new TechTalk.SpecFlow.Table(new string[] {
                        "LoanTypeCode",
                        "OfficerCode",
                        "MIOCode",
                        "RecovererCode"});
            table464.AddRow(new string[] {
                        "CONS",
                        "0800",
                        "OILS",
                        "GIC5"});
#line 10
  testRunner.And("The user modifies the recoverer in DL file with credentials:", ((string)(null)), table464, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_882")]
        public virtual void CITI_882()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_882", "Verify the phone status where MIO = OILS and all phone Indicators = N", ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table465 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table465.AddRow(new string[] {
                            "6479991111",
                            "N",
                            "6479992222",
                            "N"});
#line 17
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table465, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table466 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table466.AddRow(new string[] {
                            "6479993333",
                            "N"});
#line 20
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table466, "Given ");
#line hidden
#line 26
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table467 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table467.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table467.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table467.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 28
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table467, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_883")]
        public virtual void CITI_883()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_883", "Verify the phone status where MIO = OILS and all phone Indicators = E", ((string[])(null)));
#line 35
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table468 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table468.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 37
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table468, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table469 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table469.AddRow(new string[] {
                            "6479993333",
                            "E"});
#line 40
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table469, "Given ");
#line hidden
#line 43
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 44
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table470 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table470.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table470.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table470.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 45
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table470, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_884")]
        public virtual void CITI_884()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_884", "Verify the phone status where MIO = OILS and all phone Indicators = D", ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table471 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table471.AddRow(new string[] {
                            "6479991111",
                            "D",
                            "6479992222",
                            "D"});
#line 54
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table471, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table472 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table472.AddRow(new string[] {
                            "6479993333",
                            "D"});
#line 57
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table472, "Given ");
#line hidden
#line 60
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table473 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table473.AddRow(new string[] {
                            "6479991111",
                            "N",
                            "1",
                            "Home",
                            "Landline"});
                table473.AddRow(new string[] {
                            "6479992222",
                            "N",
                            "2",
                            "Work",
                            "Landline"});
                table473.AddRow(new string[] {
                            "6479993333",
                            "N",
                            "18",
                            "Home",
                            "Mobile"});
#line 62
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table473, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_885")]
        public virtual void CITI_885()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_885", "Verify the phone status where MIO = OILS and all phone Indicators = B", ((string[])(null)));
#line 69
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table474 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table474.AddRow(new string[] {
                            "6479991111",
                            "B",
                            "6479992222",
                            "B"});
#line 71
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table474, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table475 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table475.AddRow(new string[] {
                            "6479993333",
                            "B"});
#line 74
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table475, "Given ");
#line hidden
#line 77
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 78
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table476 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table476.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table476.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table476.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 79
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table476, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_886")]
        public virtual void CITI_886()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_886", "Verify the phone status where MIO = OILS and all phone Indicators = V", ((string[])(null)));
#line 86
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table477 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table477.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "6479992222",
                            "V"});
#line 88
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table477, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table478 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table478.AddRow(new string[] {
                            "6479993333",
                            "V"});
#line 91
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table478, "Given ");
#line hidden
#line 94
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 95
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table479 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table479.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table479.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table479.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 96
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table479, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_887")]
        public virtual void CITI_887()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_887", "Verify the phone status where MIO = OILS and all phone Indicators = H", ((string[])(null)));
#line 103
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table480 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table480.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "H"});
#line 105
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table480, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table481 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table481.AddRow(new string[] {
                            "6479993333",
                            "H"});
#line 108
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table481, "Given ");
#line hidden
#line 111
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table482 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType",
                            "ConsentToDialer"});
                table482.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline",
                            "Denied"});
                table482.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline",
                            "Denied"});
                table482.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile",
                            "Denied"});
#line 113
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table482, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_888")]
        public virtual void CITI_888()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_888", "Verify the phone status where MIO = OILS and all phone Indicators = S", ((string[])(null)));
#line 120
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table483 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table483.AddRow(new string[] {
                            "6479991111",
                            "S",
                            "6479992222",
                            "S"});
#line 122
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table483, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table484 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table484.AddRow(new string[] {
                            "6479993333",
                            "S"});
#line 125
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table484, "Given ");
#line hidden
#line 128
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 129
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table485 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table485.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table485.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table485.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 130
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table485, "Then ");
#line hidden
#line 135
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_889")]
        public virtual void CITI_889()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_889", "Verify the phone status where MIO = OILS and all phone Indicators = U", ((string[])(null)));
#line 138
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table486 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table486.AddRow(new string[] {
                            "6479991111",
                            "U",
                            "6479992222",
                            "U"});
#line 140
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table486, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table487 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table487.AddRow(new string[] {
                            "6479993333",
                            "U"});
#line 143
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table487, "Given ");
#line hidden
#line 146
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 147
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table488 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType",
                            "ConsentToDialer"});
                table488.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline",
                            "Denied"});
                table488.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline",
                            "Denied"});
                table488.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile",
                            "Denied"});
#line 148
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table488, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_890")]
        public virtual void CITI_890()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_890", "Verify the phone status where MIO = OILS and all phone Indicators = Y", ((string[])(null)));
#line 155
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table489 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table489.AddRow(new string[] {
                            "6479991111",
                            "Y",
                            "6479992222",
                            "Y"});
#line 157
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table489, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table490 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table490.AddRow(new string[] {
                            "6479993333",
                            "Y"});
#line 160
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table490, "Given ");
#line hidden
#line 163
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table491 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table491.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table491.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table491.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 165
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table491, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_891")]
        public virtual void CITI_891()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_891", "Verify the phone status where MIO = OILS and Home Indicator = C", ((string[])(null)));
#line 172
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table492 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table492.AddRow(new string[] {
                            "6479991111",
                            "C",
                            "6479992222",
                            "Y"});
#line 174
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table492, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table493 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table493.AddRow(new string[] {
                            "6479993333",
                            "Y"});
#line 177
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table493, "Given ");
#line hidden
#line 180
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 181
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table494 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table494.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "1",
                            "Home",
                            "Landline"});
                table494.AddRow(new string[] {
                            "6479992222",
                            "X",
                            "2",
                            "Work",
                            "Landline"});
                table494.AddRow(new string[] {
                            "6479993333",
                            "X",
                            "18",
                            "Home",
                            "Mobile"});
#line 182
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table494, "Then ");
#line hidden
#line 187
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_892")]
        public virtual void CITI_892()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_892", "Verify the phone status where MIO = OILS and Work Indicator = C", ((string[])(null)));
#line 190
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table495 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table495.AddRow(new string[] {
                            "6479991111",
                            "Y",
                            "6479992222",
                            "C"});
#line 192
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table495, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table496 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table496.AddRow(new string[] {
                            "6479993333",
                            "Y"});
#line 195
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table496, "Given ");
#line hidden
#line 198
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 199
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table497 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table497.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "1",
                            "Home",
                            "Landline"});
                table497.AddRow(new string[] {
                            "6479992222",
                            "X",
                            "2",
                            "Work",
                            "Landline"});
                table497.AddRow(new string[] {
                            "6479993333",
                            "X",
                            "18",
                            "Home",
                            "Mobile"});
#line 200
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table497, "Then ");
#line hidden
#line 205
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_893")]
        public virtual void CITI_893()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_893", "Verify the phone status where MIO = OILS and Cell Indicator = C", ((string[])(null)));
#line 208
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table498 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table498.AddRow(new string[] {
                            "6479991111",
                            "Y",
                            "6479992222",
                            "Y"});
#line 210
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table498, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table499 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table499.AddRow(new string[] {
                            "6479993333",
                            "C"});
#line 213
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table499, "Given ");
#line hidden
#line 216
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 217
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table500 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table500.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "1",
                            "Home",
                            "Landline"});
                table500.AddRow(new string[] {
                            "6479992222",
                            "X",
                            "2",
                            "Work",
                            "Landline"});
                table500.AddRow(new string[] {
                            "6479993333",
                            "X",
                            "18",
                            "Home",
                            "Mobile"});
#line 218
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table500, "Then ");
#line hidden
#line 223
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_894")]
        public virtual void CITI_894()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_894", "Verify the phone status where MIO = OILS and Home Indicator = X", ((string[])(null)));
#line 226
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table501 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table501.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "6479992222",
                            "Y"});
#line 228
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table501, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table502 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table502.AddRow(new string[] {
                            "6479993333",
                            "Y"});
#line 231
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table502, "Given ");
#line hidden
#line 234
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 235
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table503 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table503.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table503.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table503.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 236
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table503, "Then ");
#line hidden
#line 241
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_895")]
        public virtual void CITI_895()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_895", "Verify the phone status where MIO = OILS and Work Indicator = X", ((string[])(null)));
#line 244
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table504 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table504.AddRow(new string[] {
                            "6479991111",
                            "Y",
                            "6479992222",
                            "X"});
#line 246
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table504, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table505 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table505.AddRow(new string[] {
                            "6479993333",
                            "Y"});
#line 249
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table505, "Given ");
#line hidden
#line 252
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 253
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table506 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table506.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table506.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table506.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 254
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table506, "Then ");
#line hidden
#line 259
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_896")]
        public virtual void CITI_896()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_896", "Verify the phone status where MIO = OILS and Cell Indicator = X", ((string[])(null)));
#line 262
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table507 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table507.AddRow(new string[] {
                            "6479991111",
                            "Y",
                            "6479992222",
                            "Y"});
#line 264
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table507, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table508 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table508.AddRow(new string[] {
                            "6479993333",
                            "X"});
#line 267
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table508, "Given ");
#line hidden
#line 270
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 271
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table509 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table509.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table509.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table509.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 272
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table509, "Then ");
#line hidden
#line 277
 testRunner.Then("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
