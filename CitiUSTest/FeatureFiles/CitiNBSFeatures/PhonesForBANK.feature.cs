// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CitiUSTest.FeatureFiles.CitiNBSFeatures
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NbsPhonesForBank")]
    [NUnit.Framework.CategoryAttribute("Placement")]
    [NUnit.Framework.CategoryAttribute("Phones")]
    [NUnit.Framework.CategoryAttribute("BANK")]
    [NUnit.Framework.CategoryAttribute("epic:84633")]
    public partial class NbsPhonesForBankFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "Placement",
                "Phones",
                "BANK",
                "epic:84633"};
        
#line 1 "PhonesForBANK.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "NbsPhonesForBank", "\tTo test the loading of phone for new account loaded into the system for Citi BAN" +
                    "K accounts\t", ProgrammingLanguage.CSharp, new string[] {
                        "Placement",
                        "Phones",
                        "BANK",
                        "epic:84633"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
#line 6
 testRunner.Given("The user creates a Citi NBS based on the sample file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                        "MIOCode",
                        "ListDate"});
            table351.AddRow(new string[] {
                        "BANK",
                        "Yesterday"});
#line 7
 testRunner.And("The user modifies the header record with credentials:", ((string)(null)), table351, "And ");
#line hidden
            TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                        "LoanTypeCode",
                        "OfficerCode",
                        "MIOCode",
                        "RecovererCode"});
            table352.AddRow(new string[] {
                        "CONS",
                        "433902",
                        "BANK",
                        "GL03"});
#line 10
 testRunner.And("The user modifies the account record in DL file with credentials:", ((string)(null)), table352, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_852")]
        public virtual void CITI_852()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_852", "Verify the phone status where MIO = Bank and all phone Indicators = B", ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table353 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table353.AddRow(new string[] {
                            "6479991111",
                            "B",
                            "6479992222",
                            "B"});
#line 17
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table353, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table354.AddRow(new string[] {
                            "6479993333",
                            "B"});
#line 20
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table354, "Given ");
#line hidden
#line 23
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table355.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table355.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table355.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 25
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table355, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table356.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "B",
                            "V",
                            "Landline",
                            "Home"});
                table356.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "B",
                            "V",
                            "Landline",
                            "Work"});
                table356.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "B",
                            "V",
                            "Mobile",
                            "Home"});
#line 30
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table356, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_853")]
        public virtual void CITI_853()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_853", "Verify the phone status where MIO = Bank and all phone Indicators = N", ((string[])(null)));
#line 37
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table357.AddRow(new string[] {
                            "6479991111",
                            "N",
                            "6479992222",
                            "N"});
#line 39
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table357, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table358.AddRow(new string[] {
                            "6479993333",
                            "N"});
#line 42
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table358, "Given ");
#line hidden
#line 45
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table359.AddRow(new string[] {
                            "6479991111",
                            "N",
                            "1",
                            "Home",
                            "Landline"});
                table359.AddRow(new string[] {
                            "6479992222",
                            "N",
                            "2",
                            "Work",
                            "Landline"});
                table359.AddRow(new string[] {
                            "6479993333",
                            "N",
                            "18",
                            "Home",
                            "Mobile"});
#line 47
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table359, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table360.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "N",
                            "N",
                            "Landline",
                            "Home"});
                table360.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "N",
                            "N",
                            "Landline",
                            "Work"});
                table360.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "N",
                            "N",
                            "Mobile",
                            "Home"});
#line 52
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table360, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_854")]
        public virtual void CITI_854()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_854", "Verify the phone status where MIO = Bank and all phone Indicators = D", ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table361.AddRow(new string[] {
                            "6479991111",
                            "D",
                            "6479992222",
                            "D"});
#line 61
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table361, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table362.AddRow(new string[] {
                            "6479993333",
                            "D"});
#line 64
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table362, "Given ");
#line hidden
#line 67
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 68
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table363.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table363.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table363.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 69
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table363, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table364.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "D",
                            "A",
                            "Landline",
                            "Home"});
                table364.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "D",
                            "A",
                            "Landline",
                            "Work"});
                table364.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "D",
                            "W",
                            "Mobile",
                            "Home"});
#line 74
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table364, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_855")]
        public virtual void CITI_855()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_855", "Verify the phone status where MIO = Bank and all phone Indicators = J", ((string[])(null)));
#line 81
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table365.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 83
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table365, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table366.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 86
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table366, "Given ");
#line hidden
#line 89
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table367.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table367.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table367.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 91
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table367, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table368.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "J",
                            "A",
                            "Landline",
                            "Home"});
                table368.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "J",
                            "A",
                            "Landline",
                            "Work"});
                table368.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "J",
                            "W",
                            "Mobile",
                            "Home"});
#line 96
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table368, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_856")]
        public virtual void CITI_856()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_856", "Verify the phone status where MIO = Bank and all phone Indicators = A", ((string[])(null)));
#line 103
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table369.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479992222",
                            "A"});
#line 105
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table369, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table370.AddRow(new string[] {
                            "6479993333",
                            "A"});
#line 108
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table370, "Given ");
#line hidden
#line 111
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table371.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table371.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table371.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 114
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table371, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table372.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Landline",
                            "Home"});
                table372.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Landline",
                            "Work"});
                table372.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Mobile",
                            "Home"});
#line 119
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table372, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_857")]
        public virtual void CITI_857()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_857", "Verify the phone status where MIO = Bank and all phone Indicators = H", ((string[])(null)));
#line 126
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table373.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "H"});
#line 128
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table373, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table374.AddRow(new string[] {
                            "6479993333",
                            "H"});
#line 131
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table374, "Given ");
#line hidden
#line 134
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 135
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 136
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table375 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType",
                            "ConsentToDialer"});
                table375.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline",
                            "Denied"});
                table375.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline",
                            "Denied"});
                table375.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile",
                            "Denied"});
#line 137
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table375, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table376 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table376.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "H",
                            "A",
                            "Landline",
                            "Home"});
                table376.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "H",
                            "A",
                            "Landline",
                            "Work"});
                table376.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "H",
                            "W",
                            "Mobile",
                            "Home"});
#line 142
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table376, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_858")]
        public virtual void CITI_858()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_858", "Verify the phone status where MIO = Bank and all phone Indicators = X", ((string[])(null)));
#line 149
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table377 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table377.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "6479992222",
                            "X"});
#line 151
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table377, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table378 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table378.AddRow(new string[] {
                            "6479993333",
                            "X"});
#line 154
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table378, "Given ");
#line hidden
#line 157
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 158
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table379 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table379.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table379.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table379.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 160
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table379, "Then ");
#line hidden
#line 165
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table380 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table380.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "X",
                            "V",
                            "Landline",
                            "Home"});
                table380.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "X",
                            "V",
                            "Landline",
                            "Work"});
                table380.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "X",
                            "V",
                            "Mobile",
                            "Home"});
#line 166
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table380, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_859")]
        public virtual void CITI_859()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_859", "Verify the phone status where MIO = Bank and all phone Indicators = U", ((string[])(null)));
#line 173
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table381 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table381.AddRow(new string[] {
                            "6479991111",
                            "U",
                            "6479992222",
                            "U"});
#line 175
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table381, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table382 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table382.AddRow(new string[] {
                            "6479993333",
                            "U"});
#line 178
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table382, "Given ");
#line hidden
#line 181
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 182
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 183
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table383 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType",
                            "ConsentToDialer"});
                table383.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline",
                            "Denied"});
                table383.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline",
                            "Denied"});
                table383.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile",
                            "Denied"});
#line 184
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table383, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table384 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table384.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "U",
                            "A",
                            "Landline",
                            "Home"});
                table384.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "U",
                            "A",
                            "Landline",
                            "Work"});
                table384.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "U",
                            "W",
                            "Mobile",
                            "Home"});
#line 189
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table384, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_860")]
        public virtual void CITI_860()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_860", "Verify the phone status where MIO = Bank and all phone Indicators = R", ((string[])(null)));
#line 196
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table385 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table385.AddRow(new string[] {
                            "6479991111",
                            "R",
                            "6479992222",
                            "R"});
#line 198
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table385, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table386 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table386.AddRow(new string[] {
                            "6479993333",
                            "R"});
#line 201
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table386, "Given ");
#line hidden
#line 204
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 205
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 206
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table387 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table387.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table387.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table387.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 207
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table387, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table388 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table388.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "R",
                            "A",
                            "Landline",
                            "Home"});
                table388.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "R",
                            "A",
                            "Landline",
                            "Work"});
                table388.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "R",
                            "W",
                            "Mobile",
                            "Home"});
#line 212
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table388, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_861")]
        public virtual void CITI_861()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_861", "Verify the phone status where MIO = Bank and only Home Indicator = W", ((string[])(null)));
#line 219
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table389 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table389.AddRow(new string[] {
                            "6479991111",
                            "W",
                            "6479992222",
                            "A"});
#line 221
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table389, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table390 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table390.AddRow(new string[] {
                            "6479993333",
                            "A"});
#line 224
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table390, "Given ");
#line hidden
#line 227
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 228
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 229
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table391 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table391.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "1",
                            "Home",
                            "Landline"});
                table391.AddRow(new string[] {
                            "6479992222",
                            "X",
                            "2",
                            "Work",
                            "Landline"});
                table391.AddRow(new string[] {
                            "6479993333",
                            "X",
                            "18",
                            "Home",
                            "Mobile"});
#line 230
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table391, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table392 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table392.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "W",
                            "X",
                            "Landline",
                            "Home"});
                table392.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Landline",
                            "Work"});
                table392.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Mobile",
                            "Home"});
#line 235
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table392, "And ");
#line hidden
#line 240
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_862")]
        public virtual void CITI_862()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_862", "Verify the phone status where MIO = Bank and only Work Indicator = W", ((string[])(null)));
#line 243
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table393 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table393.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479992222",
                            "W"});
#line 245
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table393, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table394 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table394.AddRow(new string[] {
                            "6479993333",
                            "A"});
#line 248
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table394, "Given ");
#line hidden
#line 251
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 252
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 253
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table395 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table395.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "1",
                            "Home",
                            "Landline"});
                table395.AddRow(new string[] {
                            "6479992222",
                            "X",
                            "2",
                            "Work",
                            "Landline"});
                table395.AddRow(new string[] {
                            "6479993333",
                            "X",
                            "18",
                            "Home",
                            "Mobile"});
#line 254
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table395, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table396 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table396.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Landline",
                            "Home"});
                table396.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "W",
                            "X",
                            "Landline",
                            "Work"});
                table396.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Mobile",
                            "Home"});
#line 259
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table396, "And ");
#line hidden
#line 264
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_863")]
        public virtual void CITI_863()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_863", "Verify the phone status where MIO = Bank and only Cell Indicator = W", ((string[])(null)));
#line 267
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table397 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table397.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479992222",
                            "A"});
#line 269
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table397, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table398 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table398.AddRow(new string[] {
                            "6479993333",
                            "W"});
#line 272
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table398, "Given ");
#line hidden
#line 275
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 276
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 277
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table399 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table399.AddRow(new string[] {
                            "6479991111",
                            "X",
                            "1",
                            "Home",
                            "Landline"});
                table399.AddRow(new string[] {
                            "6479992222",
                            "X",
                            "2",
                            "Work",
                            "Landline"});
                table399.AddRow(new string[] {
                            "6479993333",
                            "X",
                            "18",
                            "Home",
                            "Mobile"});
#line 278
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table399, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table400 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table400.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Landline",
                            "Home"});
                table400.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Landline",
                            "Work"});
                table400.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "W",
                            "X",
                            "Mobile",
                            "Home"});
#line 283
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table400, "And ");
#line hidden
#line 288
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_864")]
        public virtual void CITI_864()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_864", "Verify the phone status where MIO = Bank and only Home Indicator = V", ((string[])(null)));
#line 291
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table401 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table401.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "6479992222",
                            "A"});
#line 293
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table401, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table402 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table402.AddRow(new string[] {
                            "6479993333",
                            "A"});
#line 296
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table402, "Given ");
#line hidden
#line 299
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 300
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 301
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table403 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table403.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table403.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table403.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 302
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table403, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table404 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table404.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "V",
                            "V",
                            "Landline",
                            "Home"});
                table404.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Landline",
                            "Work"});
                table404.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Mobile",
                            "Home"});
#line 307
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table404, "And ");
#line hidden
#line 312
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_865")]
        public virtual void CITI_865()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_865", "Verify the phone status where MIO = Bank and only Work Indicator = V", ((string[])(null)));
#line 315
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table405 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table405.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479992222",
                            "V"});
#line 317
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table405, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table406 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table406.AddRow(new string[] {
                            "6479993333",
                            "A"});
#line 320
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table406, "Given ");
#line hidden
#line 323
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 324
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 325
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table407 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table407.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table407.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table407.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 326
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table407, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table408 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table408.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Landline",
                            "Home"});
                table408.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "V",
                            "V",
                            "Landline",
                            "Work"});
                table408.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Mobile",
                            "Home"});
#line 331
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table408, "And ");
#line hidden
#line 336
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_866")]
        public virtual void CITI_866()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_866", "Verify the phone status where MIO = Bank and only Cell Indicator = V", ((string[])(null)));
#line 339
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table409 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table409.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479992222",
                            "A"});
#line 341
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table409, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table410 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table410.AddRow(new string[] {
                            "6479993333",
                            "V"});
#line 344
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table410, "Given ");
#line hidden
#line 347
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 348
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 349
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table411 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table411.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Home",
                            "Landline"});
                table411.AddRow(new string[] {
                            "6479992222",
                            "V",
                            "2",
                            "Work",
                            "Landline"});
                table411.AddRow(new string[] {
                            "6479993333",
                            "V",
                            "18",
                            "Home",
                            "Mobile"});
#line 350
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table411, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table412 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneServiceType",
                            "ARxPhoneLocationType"});
                table412.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Landline",
                            "Home"});
                table412.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Landline",
                            "Work"});
                table412.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "V",
                            "V",
                            "Mobile",
                            "Home"});
#line 355
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table412, "And ");
#line hidden
#line 360
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4275")]
        public virtual void CITI_4275()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4275", "Verify the phone status where MIO = Bank when all numbers are same and indicators" +
                    " are good and same", ((string[])(null)));
#line 363
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table413 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table413.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479991111",
                            "A"});
#line 365
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table413, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table414 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table414.AddRow(new string[] {
                            "6479991111",
                            "A"});
#line 368
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table414, "Given ");
#line hidden
#line 371
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 372
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 373
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table415 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table415.AddRow(new string[] {
                            "6479991111",
                            "W",
                            "1",
                            "Work",
                            "Mobile"});
#line 374
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table415, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table416 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table416.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Home",
                            "Landline"});
                table416.AddRow(new string[] {
                            "6479991111",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Work",
                            "Landline"});
                table416.AddRow(new string[] {
                            "6479991111",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Work",
                            "Mobile"});
#line 377
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table416, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4276")]
        public virtual void CITI_4276()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4276", "Verify the phone status where MIO = Bank when all numbers are same and indicators" +
                    " are good and different", ((string[])(null)));
#line 384
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table417 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table417.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 386
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table417, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table418 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table418.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 389
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table418, "Given ");
#line hidden
#line 392
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 393
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 394
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table419 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType",
                            "ConsentToDialer"});
                table419.AddRow(new string[] {
                            "6479991111",
                            "W",
                            "1",
                            "Work",
                            "Mobile",
                            "Denied"});
#line 395
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table419, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table420 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table420.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "H",
                            "A",
                            "Home",
                            "Landline"});
                table420.AddRow(new string[] {
                            "6479991111",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Work",
                            "Landline"});
                table420.AddRow(new string[] {
                            "6479991111",
                            "MASCPN",
                            "MASCPI",
                            "J",
                            "W",
                            "Work",
                            "Mobile"});
#line 398
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table420, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4277")]
        public virtual void CITI_4277()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4277", "Verify the phone status where MIO = Bank when all numbers are same and indicators" +
                    " are bad and different", ((string[])(null)));
#line 405
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table421 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table421.AddRow(new string[] {
                            "6479991111",
                            "B",
                            "6479991111",
                            "X"});
#line 407
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table421, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table422 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table422.AddRow(new string[] {
                            "6479991111",
                            "A"});
#line 410
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table422, "Given ");
#line hidden
#line 413
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 414
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 415
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table423 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table423.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Work",
                            "Mobile"});
#line 416
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table423, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table424 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table424.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "B",
                            "V",
                            "Home",
                            "Landline"});
                table424.AddRow(new string[] {
                            "6479991111",
                            "MASOPH",
                            "MASOPF",
                            "X",
                            "V",
                            "Work",
                            "Landline"});
                table424.AddRow(new string[] {
                            "6479991111",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "V",
                            "Work",
                            "Mobile"});
#line 419
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table424, "And ");
#line hidden
#line 424
 testRunner.And("The action code 234 is applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4278")]
        public virtual void CITI_4278()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4278", "Verify the phone status where MIO = Bank when Home is all 9\'s and its indicator i" +
                    "s good", ((string[])(null)));
#line 427
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table425 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table425.AddRow(new string[] {
                            "9999999999",
                            "A",
                            "6479991111",
                            "A"});
#line 429
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table425, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table426 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table426.AddRow(new string[] {
                            "6479992222",
                            "A"});
#line 432
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table426, "Given ");
#line hidden
#line 435
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 436
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 437
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table427 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table427.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table427.AddRow(new string[] {
                            "6479992222",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 438
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table427, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table428 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table428.AddRow(new string[] {
                            "6479991111",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Work",
                            "Landline"});
                table428.AddRow(new string[] {
                            "6479992222",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Home",
                            "Mobile"});
#line 442
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table428, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4279")]
        public virtual void CITI_4279()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4279", "Verify the phone status where MIO = Bank when Home is all 9\'s and its indicator i" +
                    "s bad and apply to all status", ((string[])(null)));
#line 448
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table429 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table429.AddRow(new string[] {
                            "9999999999",
                            "W",
                            "6479992222",
                            "A"});
#line 450
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table429, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table430 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table430.AddRow(new string[] {
                            "6479993333",
                            "A"});
#line 453
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table430, "Given ");
#line hidden
#line 456
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 457
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 458
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table431 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table431.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table431.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 459
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table431, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table432 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table432.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Work",
                            "Landline"});
                table432.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Home",
                            "Mobile"});
#line 463
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table432, "And ");
#line hidden
#line 467
 testRunner.And("The action code 234 is NOT applied to the account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4280")]
        public virtual void CITI_4280()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4280", "Verify the phone status where MIO = Bank and all phone have an unknown indicator", ((string[])(null)));
#line 470
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table433 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table433.AddRow(new string[] {
                            "6479991111",
                            "Q",
                            "6479992222",
                            "T"});
#line 472
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table433, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table434 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table434.AddRow(new string[] {
                            "6479993333",
                            "I"});
#line 475
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table434, "Given ");
#line hidden
#line 478
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 479
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 480
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table435 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table435.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "1",
                            "Home",
                            "Landline"});
                table435.AddRow(new string[] {
                            "6479992222",
                            "A",
                            "2",
                            "Work",
                            "Landline"});
                table435.AddRow(new string[] {
                            "6479993333",
                            "W",
                            "18",
                            "Home",
                            "Mobile"});
#line 481
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table435, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table436 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table436.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "Q",
                            "A",
                            "Home",
                            "Landline"});
                table436.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "T",
                            "A",
                            "Work",
                            "Landline"});
                table436.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "I",
                            "W",
                            "Home",
                            "Mobile"});
#line 486
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table436, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4281")]
        public virtual void CITI_4281()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4281", "Verify the phone status where MIO = Bank when Home Work Cell are same and indicat" +
                    "ors are good and same", ((string[])(null)));
#line 493
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table437 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table437.AddRow(new string[] {
                            "6479991111",
                            "A",
                            "6479991111",
                            "A"});
#line 495
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table437, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table438 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table438.AddRow(new string[] {
                            "6479991111",
                            "A"});
#line 498
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table438, "Given ");
#line hidden
#line 501
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 502
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 503
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table439 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table439.AddRow(new string[] {
                            "6479991111",
                            "W",
                            "1",
                            "Work",
                            "Mobile"});
#line 504
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table439, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table440 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table440.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "A",
                            "A",
                            "Home",
                            "Landline"});
                table440.AddRow(new string[] {
                            "6479991111",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "A",
                            "Work",
                            "Landline"});
                table440.AddRow(new string[] {
                            "6479991111",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "W",
                            "Work",
                            "Mobile"});
#line 507
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table440, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4282")]
        public virtual void CITI_4282()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4282", "Verify the phone status where MIO = Bank when Home Work Cell are same and indicat" +
                    "ors are bad and different", ((string[])(null)));
#line 514
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table441 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table441.AddRow(new string[] {
                            "6479991111",
                            "B",
                            "6479991111",
                            "A"});
#line 516
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table441, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table442 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table442.AddRow(new string[] {
                            "6479991111",
                            "A"});
#line 519
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table442, "Given ");
#line hidden
#line 522
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 523
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 524
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table443 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "PhoneStatus",
                            "DisplaySlot",
                            "LocationType",
                            "ServiceType"});
                table443.AddRow(new string[] {
                            "6479991111",
                            "V",
                            "1",
                            "Work",
                            "Mobile"});
#line 525
 testRunner.Then("The Account Phones table for the account is as below:", ((string)(null)), table443, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table444 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table444.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "B",
                            "V",
                            "Home",
                            "Landline"});
                table444.AddRow(new string[] {
                            "6479991111",
                            "MASOPH",
                            "MASOPF",
                            "A",
                            "V",
                            "Work",
                            "Landline"});
                table444.AddRow(new string[] {
                            "6479991111",
                            "MASCPN",
                            "MASCPI",
                            "A",
                            "V",
                            "Work",
                            "Mobile"});
#line 528
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table444, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
