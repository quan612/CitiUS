// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CitiUSTest.FeatureFiles.Feature_Audit_January_2020
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Item11_Wireless_OILS")]
    [NUnit.Framework.CategoryAttribute("OutboundMaintenance")]
    [NUnit.Framework.CategoryAttribute("Item11")]
    [NUnit.Framework.CategoryAttribute("BANK")]
    public partial class Item11_Wireless_OILSFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "OutboundMaintenance",
                "Item11",
                "BANK"};
        
#line 1 "Item11_Wireless_OILS.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Item11_Wireless_OILS", "\thttp://devtracker.globalcollection.net/f/cases/29037/Feature-Int-11-Citi-Audit_-" +
                    "Wireless-phone-numbers-should-not-be-sent-as-home-phone-number-to-Citi", ProgrammingLanguage.CSharp, new string[] {
                        "OutboundMaintenance",
                        "Item11",
                        "BANK"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
#line 6
 testRunner.Given("The user creates a Citi NBS based on the sample file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1245 = new TechTalk.SpecFlow.Table(new string[] {
                        "MIOCode",
                        "ListDate"});
            table1245.AddRow(new string[] {
                        "OILS",
                        "2019/08/15"});
#line 7
 testRunner.And("The user modifies the header record with credentials:", ((string)(null)), table1245, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1246 = new TechTalk.SpecFlow.Table(new string[] {
                        "LoanTypeCode",
                        "OfficerCode",
                        "MIOCode",
                        "RecovererCode"});
            table1246.AddRow(new string[] {
                        "CONS",
                        "0800",
                        "OILS",
                        "GIC5"});
#line 10
 testRunner.And("The user modifies the recoverer in DL file with credentials:", ((string)(null)), table1246, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4494")]
        public virtual void CITI_4494()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4494", "Verify outbound MT when Citi Home Work is good, in ARxCollect the user changes th" +
                    "e Home to have Wireless status and add a new Home (OILS)", ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1247 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1247.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 17
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1247, "Given ");
#line hidden
#line 20
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("the user changes the phone number 6479991111 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1248 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1248.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table1248.AddRow(new string[] {
                            "MASCPI",
                            "Y"});
#line 26
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1248, "Then ");
#line hidden
#line 30
 testRunner.When("the user adds a new number 6479993333 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
 testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1249 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1249.AddRow(new string[] {
                            "MASHPH",
                            "6479993333"});
                table1249.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
#line 34
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1249, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4495")]
        public virtual void CITI_4495()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4495", "Verify outbound MT when Citi Home Work is good, in ARxCollect the user changes th" +
                    "e Home to have Wireless status and add a new Home then add another Home (OILS)", ((string[])(null)));
#line 40
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1250 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1250.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 42
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1250, "Given ");
#line hidden
#line 45
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user changes the phone number 6479991111 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1251 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1251.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table1251.AddRow(new string[] {
                            "MASCPI",
                            "Y"});
#line 51
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1251, "Then ");
#line hidden
#line 55
 testRunner.When("the user adds a new number 6479993333 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1252 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1252.AddRow(new string[] {
                            "MASHPH",
                            "6479993333"});
                table1252.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
#line 59
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1252, "Then ");
#line hidden
#line 63
 testRunner.When("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 64
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1253 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1253.AddRow(new string[] {
                            "MASRPH",
                            "6479994444"});
                table1253.AddRow(new string[] {
                            "MASRPF",
                            "Y"});
#line 67
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1253, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4496")]
        public virtual void CITI_4496()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4496", "Verify outbound MT when Citi Home Work Cell is good, in ARxCollect the user chang" +
                    "es the Home to have Wireless status and add a new Home (OILS)", ((string[])(null)));
#line 73
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1254 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1254.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 75
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1254, "Given ");
#line hidden
#line 78
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1255 = new TechTalk.SpecFlow.Table(new string[] {
                            "Transaction DateTime",
                            "Transaction Code",
                            "Field Code",
                            "New Value"});
                table1255.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPN",
                            "6479993333"});
                table1255.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPI",
                            "E"});
#line 80
 testRunner.When("The user creates a Citi Inbound Maintenance File using account from previous step" +
                        "s:", ((string)(null)), table1255, "When ");
#line hidden
#line 84
  testRunner.And("The user drops the file to the UNC path, and the file is processed and the eColle" +
                        "ct Job is done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("the user changes the phone number 6479991111 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1256 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table1256.AddRow(new string[] {
                            "MASHPH"});
                table1256.AddRow(new string[] {
                            "MASHPF"});
                table1256.AddRow(new string[] {
                            "MASOPH"});
                table1256.AddRow(new string[] {
                            "MASOPF"});
                table1256.AddRow(new string[] {
                            "MASCPN"});
                table1256.AddRow(new string[] {
                            "MASCPI"});
#line 89
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table1256, "Then ");
#line hidden
#line 97
 testRunner.When("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1257 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1257.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table1257.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
                table1257.AddRow(new string[] {
                            "MASRPH",
                            "6479991111"});
                table1257.AddRow(new string[] {
                            "MASRPF",
                            "Y"});
#line 101
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1257, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4497")]
        public virtual void CITI_4497()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4497", "Citi Home would be replaced if the status is changed to Wireless (OILS)", ((string[])(null)));
#line 110
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1258 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1258.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 112
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1258, "Given ");
#line hidden
#line 115
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 116
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1259 = new TechTalk.SpecFlow.Table(new string[] {
                            "Transaction DateTime",
                            "Transaction Code",
                            "Field Code",
                            "New Value"});
                table1259.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPN",
                            "6479993333"});
                table1259.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPI",
                            "E"});
                table1259.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPH",
                            "6479994444"});
                table1259.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPF",
                            "E"});
#line 117
 testRunner.When("The user creates a Citi Inbound Maintenance File using account from previous step" +
                        "s:", ((string)(null)), table1259, "When ");
#line hidden
#line 123
  testRunner.And("The user drops the file to the UNC path, and the file is processed and the eColle" +
                        "ct Job is done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
  testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
  testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
  testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
  testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.When("the user adds a new number 6479995555 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 129
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1260 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table1260.AddRow(new string[] {
                            "MASHPH"});
                table1260.AddRow(new string[] {
                            "MASHPF"});
                table1260.AddRow(new string[] {
                            "MASOPH"});
                table1260.AddRow(new string[] {
                            "MASOPF"});
                table1260.AddRow(new string[] {
                            "MASCPN"});
                table1260.AddRow(new string[] {
                            "MASCPI"});
                table1260.AddRow(new string[] {
                            "MASRPH"});
                table1260.AddRow(new string[] {
                            "MASRPF"});
#line 132
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table1260, "Then ");
#line hidden
#line 142
 testRunner.When("the user changes the phone number 6479991111 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 143
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1261 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1261.AddRow(new string[] {
                            "MASHPH",
                            "6479995555"});
                table1261.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
#line 145
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1261, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4498")]
        public virtual void CITI_4498()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4498", "Citi Home would be replaced if the service is changed to Mobile (OILS)", ((string[])(null)));
#line 152
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1262 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1262.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 154
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1262, "Given ");
#line hidden
#line 157
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 158
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1263 = new TechTalk.SpecFlow.Table(new string[] {
                            "Transaction DateTime",
                            "Transaction Code",
                            "Field Code",
                            "New Value"});
                table1263.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPN",
                            "6479993333"});
                table1263.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPI",
                            "E"});
                table1263.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPH",
                            "6479994444"});
                table1263.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPF",
                            "E"});
#line 159
 testRunner.When("The user creates a Citi Inbound Maintenance File using account from previous step" +
                        "s:", ((string)(null)), table1263, "When ");
#line hidden
#line 165
  testRunner.And("The user drops the file to the UNC path, and the file is processed and the eColle" +
                        "ct Job is done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 166
  testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 167
  testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 168
  testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 169
  testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 170
 testRunner.When("the user adds a new number 6479995555 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 171
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1264 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table1264.AddRow(new string[] {
                            "MASHPH"});
                table1264.AddRow(new string[] {
                            "MASHPF"});
                table1264.AddRow(new string[] {
                            "MASOPH"});
                table1264.AddRow(new string[] {
                            "MASOPF"});
                table1264.AddRow(new string[] {
                            "MASCPN"});
                table1264.AddRow(new string[] {
                            "MASCPI"});
                table1264.AddRow(new string[] {
                            "MASRPH"});
                table1264.AddRow(new string[] {
                            "MASRPF"});
#line 174
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table1264, "Then ");
#line hidden
#line 184
 testRunner.When("the user changes the phone number 6479991111 to service Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 185
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 186
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1265 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1265.AddRow(new string[] {
                            "MASHPH",
                            "6479995555"});
                table1265.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
#line 187
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1265, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4499")]
        public virtual void CITI_4499()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4499", "Citi Cell would be replaced if the status is changed to Active and the service is" +
                    " changed to Landline (OILS)", ((string[])(null)));
#line 194
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1266 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1266.AddRow(new string[] {
                            "6479991111",
                            "E",
                            "6479992222",
                            "E"});
#line 196
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1266, "Given ");
#line hidden
#line 199
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 200
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1267 = new TechTalk.SpecFlow.Table(new string[] {
                            "Transaction DateTime",
                            "Transaction Code",
                            "Field Code",
                            "New Value"});
                table1267.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPN",
                            "6479993333"});
                table1267.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPI",
                            "E"});
                table1267.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPH",
                            "6479994444"});
                table1267.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPF",
                            "E"});
#line 201
 testRunner.When("The user creates a Citi Inbound Maintenance File using account from previous step" +
                        "s:", ((string)(null)), table1267, "When ");
#line hidden
#line 207
  testRunner.And("The user drops the file to the UNC path, and the file is processed and the eColle" +
                        "ct Job is done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 208
  testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 209
  testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 210
  testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 211
  testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 212
 testRunner.When("the user adds a new number 6479995555 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 213
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 214
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1268 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table1268.AddRow(new string[] {
                            "MASHPH"});
                table1268.AddRow(new string[] {
                            "MASHPF"});
                table1268.AddRow(new string[] {
                            "MASOPH"});
                table1268.AddRow(new string[] {
                            "MASOPF"});
                table1268.AddRow(new string[] {
                            "MASCPN"});
                table1268.AddRow(new string[] {
                            "MASCPI"});
                table1268.AddRow(new string[] {
                            "MASRPH"});
                table1268.AddRow(new string[] {
                            "MASRPF"});
#line 216
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table1268, "Then ");
#line hidden
#line 226
 testRunner.When("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 227
 testRunner.When("the user changes the phone number 6479993333 to service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 228
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 229
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1269 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1269.AddRow(new string[] {
                            "MASCPN",
                            "6479995555"});
                table1269.AddRow(new string[] {
                            "MASCPI",
                            "Y"});
#line 230
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1269, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4500")]
        public virtual void CITI_4500()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4500", "Citi 4th phone is sent when it has Wireless status and there is already a Citi Ce" +
                    "ll (OILS)", ((string[])(null)));
#line 237
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1270 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1270.AddRow(new string[] {
                            "6479991111",
                            "N",
                            "6479992222",
                            "N"});
#line 239
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1270, "Given ");
#line hidden
#line 242
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 243
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1271 = new TechTalk.SpecFlow.Table(new string[] {
                            "Transaction DateTime",
                            "Transaction Code",
                            "Field Code",
                            "New Value"});
                table1271.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPN",
                            "6479993333"});
                table1271.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPI",
                            "N"});
                table1271.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPH",
                            "6479994444"});
                table1271.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPF",
                            "N"});
#line 244
 testRunner.When("The user creates a Citi Inbound Maintenance File using account from previous step" +
                        "s:", ((string)(null)), table1271, "When ");
#line hidden
#line 250
  testRunner.And("The user drops the file to the UNC path, and the file is processed and the eColle" +
                        "ct Job is done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 251
  testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 252
  testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 253
  testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 254
  testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 255
 testRunner.When("the user adds a new number 6479995555 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 256
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 257
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 258
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1272 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1272.AddRow(new string[] {
                            "MASCPN",
                            "6479995555"});
                table1272.AddRow(new string[] {
                            "MASCPI",
                            "Y"});
#line 259
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1272, "Then ");
#line hidden
#line 263
 testRunner.When("the user changes the phone number 6479991111 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 264
 testRunner.When("the user changes the phone number 6479991111 to service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 265
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 266
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1273 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1273.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table1273.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
#line 267
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1273, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4501")]
        public virtual void CITI_4501()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4501", "Citi Home Work Cell 4th is bad, add new good Home then change current Cell to Goo" +
                    "d then change current Home to Good (OILS)", ((string[])(null)));
#line 276
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1274 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table1274.AddRow(new string[] {
                            "6479991111",
                            "N",
                            "6479992222",
                            "N"});
#line 278
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table1274, "Given ");
#line hidden
#line 281
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 282
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1275 = new TechTalk.SpecFlow.Table(new string[] {
                            "Transaction DateTime",
                            "Transaction Code",
                            "Field Code",
                            "New Value"});
                table1275.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPN",
                            "6479993333"});
                table1275.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASCPI",
                            "N"});
                table1275.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPH",
                            "6479994444"});
                table1275.AddRow(new string[] {
                            "Today\'s date",
                            "MT",
                            "MASRPF",
                            "N"});
#line 283
 testRunner.When("The user creates a Citi Inbound Maintenance File using account from previous step" +
                        "s:", ((string)(null)), table1275, "When ");
#line hidden
#line 289
  testRunner.And("The user drops the file to the UNC path, and the file is processed and the eColle" +
                        "ct Job is done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 290
  testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 291
  testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 292
  testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 293
  testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 294
 testRunner.When("the user adds a new number 6479995555 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 295
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 296
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 297
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1276 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1276.AddRow(new string[] {
                            "MASHPH",
                            "6479995555"});
                table1276.AddRow(new string[] {
                            "MASHPF",
                            "Y"});
#line 298
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1276, "Then ");
#line hidden
#line 302
 testRunner.When("the user changes the phone number 6479993333 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 303
 testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 304
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1277 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1277.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table1277.AddRow(new string[] {
                            "MASCPI",
                            "Y"});
#line 305
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1277, "Then ");
#line hidden
#line 309
 testRunner.When("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 310
  testRunner.And("The user generates an outbound maintenance file for OILS_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 311
  testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1278 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table1278.AddRow(new string[] {
                            "MASRPH",
                            "6479991111"});
                table1278.AddRow(new string[] {
                            "MASRPF",
                            "Y"});
#line 312
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table1278, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
