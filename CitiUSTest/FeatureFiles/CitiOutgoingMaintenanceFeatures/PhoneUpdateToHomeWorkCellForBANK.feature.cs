// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CitiUSTest.FeatureFiles.CitiOutgoingMaintenanceFeatures
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Phone Update To Home, Work, Cell for BANK")]
    [NUnit.Framework.CategoryAttribute("OutboundMaintenance")]
    [NUnit.Framework.CategoryAttribute("HomeWorkCell")]
    [NUnit.Framework.CategoryAttribute("BANK")]
    [NUnit.Framework.CategoryAttribute("epic:84633")]
    public partial class PhoneUpdateToHomeWorkCellForBANKFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "OutboundMaintenance",
                "HomeWorkCell",
                "BANK",
                "epic:84633"};
        
#line 1 "PhoneUpdateToHomeWorkCellForBANK.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Phone Update To Home, Work, Cell for BANK", "\tTo test sending of phone to Citi related to Home, Work, Cell number updates \t", ProgrammingLanguage.CSharp, new string[] {
                        "OutboundMaintenance",
                        "HomeWorkCell",
                        "BANK",
                        "epic:84633"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
#line 6
 testRunner.Given("The user creates a Citi NBS based on the sample file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table776 = new TechTalk.SpecFlow.Table(new string[] {
                        "MIOCode",
                        "ListDate"});
            table776.AddRow(new string[] {
                        "BANK",
                        "Yesterday"});
#line 7
 testRunner.And("The user modifies the header record with credentials:", ((string)(null)), table776, "And ");
#line hidden
            TechTalk.SpecFlow.Table table777 = new TechTalk.SpecFlow.Table(new string[] {
                        "LoanTypeCode",
                        "OfficerCode",
                        "MIOCode",
                        "RecovererCode"});
            table777.AddRow(new string[] {
                        "CONS",
                        "433902",
                        "BANK",
                        "GL03"});
#line 10
 testRunner.And("The user modifies the account record in DL file with credentials:", ((string)(null)), table777, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4080")]
        public virtual void CITI_4080()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4080", "Citi Home Work Cell changed to Wrong Number and there is no other good phone in A" +
                    "Rx", ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table778 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table778.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 17
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table778, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table779 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table779.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 20
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table779, "Given ");
#line hidden
#line 23
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user changes all the phones number of the account to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table780 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table780.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table780.AddRow(new string[] {
                            "MASHPF",
                            "B"});
                table780.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table780.AddRow(new string[] {
                            "MASOPF",
                            "B"});
                table780.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table780.AddRow(new string[] {
                            "MASCPI",
                            "B"});
#line 28
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table780, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table781 = new TechTalk.SpecFlow.Table(new string[] {
                            "PhoneNumber",
                            "CitiPhoneNumberField",
                            "CitiIndicatorField",
                            "CitiIndicator",
                            "ARxPhoneStatus",
                            "ARxPhoneLocationType",
                            "ARxPhoneServiceType"});
                table781.AddRow(new string[] {
                            "6479991111",
                            "MASHPH",
                            "MASHPF",
                            "B",
                            "I",
                            "Home",
                            "Landline"});
                table781.AddRow(new string[] {
                            "6479992222",
                            "MASOPH",
                            "MASOPF",
                            "B",
                            "I",
                            "Work",
                            "Landline"});
                table781.AddRow(new string[] {
                            "6479993333",
                            "MASCPN",
                            "MASCPI",
                            "B",
                            "I",
                            "Home",
                            "Mobile"});
#line 36
 testRunner.And("The Citi Phone tracker table for the account is as below:", ((string)(null)), table781, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4081")]
        public virtual void CITI_4081()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4081", "Citi Home Work Cell changed to Wrong Number, there are other good Home Work Cell " +
                    "in ARx", ((string[])(null)));
#line 43
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table782 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table782.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 45
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table782, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table783 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table783.AddRow(new string[] {
                            "6479993333",
                            "N"});
#line 48
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table783, "Given ");
#line hidden
#line 51
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.And("the user changes all the phones number of the account to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.And("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.And("the user adds a new number 6479995555 with status Active location Work service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table784 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table784.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table784.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table784.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table784.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table784.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table784.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 62
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table784, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4082")]
        public virtual void CITI_4082()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4082", "Citi Home Work Cell are same and changed to Wrong Number and there is no other go" +
                    "od phone in ARx", ((string[])(null)));
#line 72
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table785 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table785.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 74
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table785, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table786 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table786.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 77
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table786, "Given ");
#line hidden
#line 80
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 81
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.And("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table787 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table787.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table787.AddRow(new string[] {
                            "MASHPF",
                            "B"});
                table787.AddRow(new string[] {
                            "MASOPH",
                            "6479991111"});
                table787.AddRow(new string[] {
                            "MASOPF",
                            "B"});
                table787.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table787.AddRow(new string[] {
                            "MASCPI",
                            "B"});
#line 85
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table787, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4083")]
        public virtual void CITI_4083()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4083", "Citi Home Work Cell are same and changed to Wrong Number, there are other good Ho" +
                    "me Work Cell in ARx", ((string[])(null)));
#line 95
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table788 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table788.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 97
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table788, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table789 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table789.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 100
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table789, "Given ");
#line hidden
#line 103
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 104
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.And("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
 testRunner.And("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("the user adds a new number 6479995555 with status Active location Work service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.And("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 111
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 112
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 113
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table790 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table790.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table790.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table790.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table790.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table790.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table790.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 114
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table790, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4084")]
        public virtual void CITI_4084()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4084", "Citi Home Work Cell changed to Not In Service and there is no other good phone in" +
                    " ARx", ((string[])(null)));
#line 124
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table791 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table791.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 126
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table791, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table792 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table792.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 129
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table792, "Given ");
#line hidden
#line 132
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 133
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 134
 testRunner.And("the user changes all the phones number of the account to status Not In Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 135
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 136
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table793 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table793.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table793.AddRow(new string[] {
                            "MASHPF",
                            "N"});
                table793.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table793.AddRow(new string[] {
                            "MASOPF",
                            "N"});
                table793.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table793.AddRow(new string[] {
                            "MASCPI",
                            "N"});
#line 137
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table793, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4085")]
        public virtual void CITI_4085()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4085", "Citi Home Work Cell changed to Not In Service and there are other good Home Work " +
                    "Cell in ARx", ((string[])(null)));
#line 147
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table794 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table794.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 149
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table794, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table795 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table795.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 152
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table795, "Given ");
#line hidden
#line 155
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 156
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 157
 testRunner.And("the user changes all the phones number of the account to status Not In Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 158
 testRunner.And("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 160
 testRunner.And("the user adds a new number 6479995555 with status Active location Work service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 161
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
 testRunner.And("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 164
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 165
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table796 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table796.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table796.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table796.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table796.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table796.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table796.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 166
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table796, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4088")]
        public virtual void CITI_4088()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4088", "Citi Home Work Cell changed to Verbal DNC and there is no other good phone in ARx" +
                    "", ((string[])(null)));
#line 176
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table797 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table797.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 178
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table797, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table798 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table798.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 181
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table798, "Given ");
#line hidden
#line 184
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 185
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 186
 testRunner.And("the user changes all the phones number of the account to status Verbal Do Not Cal" +
                        "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 187
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 188
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table799 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table799.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table799.AddRow(new string[] {
                            "MASHPF",
                            "V"});
                table799.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table799.AddRow(new string[] {
                            "MASOPF",
                            "V"});
                table799.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table799.AddRow(new string[] {
                            "MASCPI",
                            "V"});
#line 189
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table799, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4089")]
        public virtual void CITI_4089()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4089", "Citi Home Work Cell changed to Verbal DNC and there are other good Home Work Cell" +
                    " in ARx", ((string[])(null)));
#line 199
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table800 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table800.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 201
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table800, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table801 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table801.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 204
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table801, "Given ");
#line hidden
#line 207
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 208
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 209
 testRunner.And("the user changes all the phones number of the account to status Verbal Do Not Cal" +
                        "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 210
 testRunner.And("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 211
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 212
 testRunner.And("the user adds a new number 6479995555 with status Active location Work service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 213
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 214
 testRunner.And("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 216
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 217
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table802 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table802.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table802.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table802.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table802.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table802.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table802.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 218
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table802, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4090")]
        public virtual void CITI_4090()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4090", "Citi Home Work Cell are same and changed to Verbal DNC and there is no other good" +
                    " phone in ARx", ((string[])(null)));
#line 228
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table803 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table803.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 230
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table803, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table804 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table804.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 233
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table804, "Given ");
#line hidden
#line 236
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 237
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 238
 testRunner.And("the user changes all the phones number of the account to status Verbal Do Not Cal" +
                        "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 239
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 240
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table805 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table805.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table805.AddRow(new string[] {
                            "MASHPF",
                            "V"});
                table805.AddRow(new string[] {
                            "MASOPH",
                            "6479991111"});
                table805.AddRow(new string[] {
                            "MASOPF",
                            "V"});
                table805.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table805.AddRow(new string[] {
                            "MASCPI",
                            "V"});
#line 241
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table805, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4092")]
        public virtual void CITI_4092()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4092", "Citi Home Work Cell changed to Written DNC and there is no other good phone in AR" +
                    "x", ((string[])(null)));
#line 251
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table806 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table806.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 253
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table806, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table807 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table807.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 256
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table807, "Given ");
#line hidden
#line 259
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 260
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 261
 testRunner.And("the user changes all the phones number of the account to status Written Do Not Ca" +
                        "ll", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 262
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 263
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table808 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table808.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table808.AddRow(new string[] {
                            "MASHPF",
                            "W"});
                table808.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table808.AddRow(new string[] {
                            "MASOPF",
                            "W"});
                table808.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table808.AddRow(new string[] {
                            "MASCPI",
                            "W"});
#line 264
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table808, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4093")]
        public virtual void CITI_4093()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4093", "Citi Home Work Cell changed to Written DNC and there are other good Home Work Cel" +
                    "l in ARx", ((string[])(null)));
#line 274
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table809 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table809.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479992222",
                            "J"});
#line 276
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table809, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table810 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table810.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 279
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table810, "Given ");
#line hidden
#line 282
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 283
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 284
 testRunner.And("the user changes all the phones number of the account to status Written Do Not Ca" +
                        "ll", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 285
 testRunner.And("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 286
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 287
 testRunner.And("the user adds a new number 6479995555 with status Active location Work service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 288
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 289
 testRunner.And("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 290
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 291
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 292
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table811 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table811.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table811.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table811.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table811.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table811.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table811.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 293
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table811, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4096")]
        public virtual void CITI_4096()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4096", "Citi Home Work Cell are Wrong Number, there are other Wrong Number phones in ARx," +
                    " change other phones in ARx to Active", ((string[])(null)));
#line 303
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table812 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table812.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 305
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table812, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table813 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table813.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 308
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table813, "Given ");
#line hidden
#line 311
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 312
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 313
 testRunner.And("the user changes all the phones number of the account to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 314
 testRunner.And("the user adds a new number 6479994444 with status Wrong Number location Home serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 315
 testRunner.And("the user adds a new number 6479995555 with status Wrong Number location Work serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 316
 testRunner.And("the user adds a new number 6479996666 with status Wrong Number location Home serv" +
                        "ice Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 317
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 318
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 319
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 320
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 321
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 322
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 323
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 324
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 325
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 326
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table814 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table814.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table814.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table814.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table814.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table814.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table814.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 327
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table814, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4097")]
        public virtual void CITI_4097()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4097", "Citi Home Work Cell are Wrong Number, there are other Wrong Number phones in ARx," +
                    " change all phones in ARx to Active", ((string[])(null)));
#line 337
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table815 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table815.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 339
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table815, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table816 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table816.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 342
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table816, "Given ");
#line hidden
#line 345
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 346
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 347
 testRunner.And("the user changes all the phones number of the account to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 348
 testRunner.And("the user adds a new number 6479994444 with status Wrong Number location Home serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 349
 testRunner.And("the user adds a new number 6479995555 with status Wrong Number location Work serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 350
 testRunner.And("the user adds a new number 6479996666 with status Wrong Number location Home serv" +
                        "ice Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 351
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 352
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 353
 testRunner.And("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 354
 testRunner.And("the user changes the phone number 6479992222 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 355
 testRunner.And("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 356
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 357
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 358
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 359
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 360
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 361
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 362
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 363
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table817 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table817.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table817.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table817.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table817.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table817.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table817.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 364
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table817, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4098")]
        public virtual void CITI_4098()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4098", "Citi Home Work Cell are same and Wrong Number, there are other Wrong Number phone" +
                    "s in ARx, change other phones in ARx to Active", ((string[])(null)));
#line 374
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table818 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table818.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 376
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table818, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table819 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table819.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 379
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table819, "Given ");
#line hidden
#line 382
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 383
 testRunner.When("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 384
 testRunner.And("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 385
 testRunner.And("the user adds a new number 6479994444 with status Wrong Number location Home serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 386
 testRunner.And("the user adds a new number 6479995555 with status Wrong Number location Work serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 387
 testRunner.And("the user adds a new number 6479996666 with status Wrong Number location Home serv" +
                        "ice Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 388
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 389
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 390
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 391
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 392
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 393
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 394
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 395
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 396
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 397
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table820 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table820.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table820.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table820.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table820.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table820.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table820.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 398
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table820, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4099")]
        public virtual void CITI_4099()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4099", "Citi Home Work Cell are same and Wrong Number, there are other Wrong Number phone" +
                    "s in ARx, change all phones in ARx to Active", ((string[])(null)));
#line 408
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table821 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table821.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 410
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table821, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table822 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table822.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 413
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table822, "Given ");
#line hidden
#line 416
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 417
 testRunner.When("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 418
 testRunner.And("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 419
 testRunner.And("the user adds a new number 6479994444 with status Wrong Number location Home serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 420
 testRunner.And("the user adds a new number 6479995555 with status Wrong Number location Work serv" +
                        "ice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 421
 testRunner.And("the user adds a new number 6479996666 with status Wrong Number location Home serv" +
                        "ice Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 422
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 423
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 424
 testRunner.And("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 425
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 426
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 427
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 428
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 429
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 430
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 431
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 432
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table823 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table823.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table823.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table823.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table823.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table823.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table823.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 433
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table823, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4100")]
        public virtual void CITI_4100()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4100", "Citi Home Work Cell are Not In Service, there are other Not In Servce phones in A" +
                    "Rx, change other phones in ARx to Active", ((string[])(null)));
#line 443
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table824 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table824.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 445
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table824, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table825 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table825.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 448
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table825, "Given ");
#line hidden
#line 451
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 452
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 453
 testRunner.And("the user changes all the phones number of the account to status Not In Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 454
 testRunner.And("the user adds a new number 6479994444 with status Not In Service location Home se" +
                        "rvice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 455
 testRunner.And("the user adds a new number 6479995555 with status Not In Service location Work se" +
                        "rvice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 456
 testRunner.And("the user adds a new number 6479996666 with status Not In Service location Home se" +
                        "rvice Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 457
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 458
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table826 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table826.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table826.AddRow(new string[] {
                            "MASHPF",
                            "N"});
                table826.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table826.AddRow(new string[] {
                            "MASOPF",
                            "N"});
                table826.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table826.AddRow(new string[] {
                            "MASCPI",
                            "N"});
#line 459
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table826, "Then ");
#line hidden
#line 467
 testRunner.When("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 468
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 469
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 470
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 471
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 472
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 473
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 474
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table827 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table827.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table827.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table827.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table827.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table827.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table827.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 475
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table827, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4101")]
        public virtual void CITI_4101()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4101", "Citi Home Work Cell are Not In Service, there are other Not In Service phones in " +
                    "ARx, change all phones in ARx to Active", ((string[])(null)));
#line 485
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table828 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table828.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 487
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table828, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table829 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table829.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 490
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table829, "Given ");
#line hidden
#line 493
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 494
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 495
 testRunner.And("the user changes all the phones number of the account to status Not In Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 496
 testRunner.And("the user adds a new number 6479994444 with status Not In Service location Home se" +
                        "rvice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 497
 testRunner.And("the user adds a new number 6479995555 with status Not In Service location Work se" +
                        "rvice Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 498
 testRunner.And("the user adds a new number 6479996666 with status Not In Service location Home se" +
                        "rvice Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 499
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 500
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table830 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table830.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table830.AddRow(new string[] {
                            "MASHPF",
                            "N"});
                table830.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table830.AddRow(new string[] {
                            "MASOPF",
                            "N"});
                table830.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table830.AddRow(new string[] {
                            "MASCPI",
                            "N"});
#line 501
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table830, "Then ");
#line hidden
#line 509
 testRunner.When("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 510
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 511
 testRunner.And("the user changes the phone number 6479992222 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 512
 testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 513
 testRunner.And("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 514
 testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 515
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 516
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 517
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 518
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 519
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table831 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table831.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table831.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table831.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table831.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table831.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table831.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 520
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table831, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4104")]
        public virtual void CITI_4104()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4104", "Citi Home Work Cell are Verbal DNC, there are other Verbal DNC phones in ARx, cha" +
                    "nge other phones in ARx to Active", ((string[])(null)));
#line 532
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table832 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table832.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 534
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table832, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table833 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table833.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 537
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table833, "Given ");
#line hidden
#line 540
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 541
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 542
 testRunner.And("the user changes all the phones number of the account to status Verbal Do Not Cal" +
                        "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 543
 testRunner.And("the user adds a new number 6479994444 with status Verbal Do Not Call location Hom" +
                        "e service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 544
 testRunner.And("the user adds a new number 6479995555 with status Verbal Do Not Call location Wor" +
                        "k service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 545
 testRunner.And("the user adds a new number 6479996666 with status Verbal Do Not Call location Hom" +
                        "e service Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 546
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 547
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table834 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table834.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table834.AddRow(new string[] {
                            "MASHPF",
                            "V"});
                table834.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table834.AddRow(new string[] {
                            "MASOPF",
                            "V"});
                table834.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table834.AddRow(new string[] {
                            "MASCPI",
                            "V"});
#line 548
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table834, "Then ");
#line hidden
#line 556
 testRunner.When("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 557
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 558
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 559
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 560
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 561
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 562
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 563
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table835 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table835.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table835.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table835.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table835.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table835.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table835.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 564
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table835, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4105")]
        public virtual void CITI_4105()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4105", "Citi Home Work Cell are Verbal DNC, there are other Verbal DNC phones in ARx, cha" +
                    "nge all phones in ARx to Active", ((string[])(null)));
#line 574
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table836 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table836.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 576
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table836, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table837 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table837.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 579
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table837, "Given ");
#line hidden
#line 582
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 583
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 584
 testRunner.And("the user changes all the phones number of the account to status Verbal Do Not Cal" +
                        "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 585
 testRunner.And("the user adds a new number 6479994444 with status Verbal Do Not Call location Hom" +
                        "e service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 586
 testRunner.And("the user adds a new number 6479995555 with status Verbal Do Not Call location Wor" +
                        "k service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 587
 testRunner.And("the user adds a new number 6479996666 with status Verbal Do Not Call location Hom" +
                        "e service Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 588
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 589
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table838 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table838.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table838.AddRow(new string[] {
                            "MASHPF",
                            "V"});
                table838.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table838.AddRow(new string[] {
                            "MASOPF",
                            "V"});
                table838.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table838.AddRow(new string[] {
                            "MASCPI",
                            "V"});
#line 590
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table838, "Then ");
#line hidden
#line 598
 testRunner.When("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 599
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 600
 testRunner.And("the user changes the phone number 6479992222 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 601
 testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 602
 testRunner.And("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 603
 testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 604
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 605
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 606
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 607
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 608
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table839 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table839.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table839.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table839.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table839.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table839.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table839.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 609
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table839, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4108")]
        public virtual void CITI_4108()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4108", "Citi Home Work Cell are Written DNC, there are other Written DNC phones in ARx, c" +
                    "hange other phones in ARx to Active", ((string[])(null)));
#line 621
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table840 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table840.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 623
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table840, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table841 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table841.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 626
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table841, "Given ");
#line hidden
#line 629
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 630
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 631
 testRunner.And("the user changes all the phones number of the account to status Written Do Not Ca" +
                        "ll", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 632
 testRunner.And("the user adds a new number 6479994444 with status Written Do Not Call location Ho" +
                        "me service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 633
 testRunner.And("the user adds a new number 6479995555 with status Written Do Not Call location Wo" +
                        "rk service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 634
 testRunner.And("the user adds a new number 6479996666 with status Written Do Not Call location Ho" +
                        "me service Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 635
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 636
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table842 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table842.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table842.AddRow(new string[] {
                            "MASHPF",
                            "W"});
                table842.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table842.AddRow(new string[] {
                            "MASOPF",
                            "W"});
                table842.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table842.AddRow(new string[] {
                            "MASCPI",
                            "W"});
#line 637
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table842, "Then ");
#line hidden
#line 645
 testRunner.When("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 646
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 647
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 648
 testRunner.And("the user creates a call record for phone number 6479995555 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 649
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 650
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 651
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 652
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table843 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table843.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table843.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table843.AddRow(new string[] {
                            "MASOPH",
                            "6479995555"});
                table843.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table843.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table843.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 653
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table843, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4109")]
        public virtual void CITI_4109()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4109", "Citi Home Work Cell are Written DNC, there are other Written DNC phones in ARx, c" +
                    "hange all phones in ARx to Active", ((string[])(null)));
#line 663
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table844 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table844.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 665
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table844, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table845 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table845.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 668
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table845, "Given ");
#line hidden
#line 671
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 672
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 673
 testRunner.And("the user changes all the phones number of the account to status Written Do Not Ca" +
                        "ll", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 674
 testRunner.And("the user adds a new number 6479994444 with status Written Do Not Call location Ho" +
                        "me service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 675
 testRunner.And("the user adds a new number 6479995555 with status Written Do Not Call location Wo" +
                        "rk service Landline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 676
 testRunner.And("the user adds a new number 6479996666 with status Written Do Not Call location Ho" +
                        "me service Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 677
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 678
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table846 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table846.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table846.AddRow(new string[] {
                            "MASHPF",
                            "W"});
                table846.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table846.AddRow(new string[] {
                            "MASOPF",
                            "W"});
                table846.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table846.AddRow(new string[] {
                            "MASCPI",
                            "W"});
#line 679
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table846, "Then ");
#line hidden
#line 687
 testRunner.When("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 688
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 689
 testRunner.And("the user changes the phone number 6479992222 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 690
 testRunner.And("the user creates a call record for phone number 6479992222 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 691
 testRunner.And("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 692
 testRunner.And("the user creates a call record for phone number 6479993333 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 693
 testRunner.And("the user changes the phone number 6479994444 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 694
 testRunner.And("the user changes the phone number 6479995555 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 695
 testRunner.And("the user changes the phone number 6479996666 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 696
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 697
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table847 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table847.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table847.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table847.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table847.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table847.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table847.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 698
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table847, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4112")]
        public virtual void CITI_4112()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4112", "Citi Home Work Cell changed to Written DNC and there is no other good phone in AR" +
                    "x, then changing those Home Work Cell to Wrong Number", ((string[])(null)));
#line 714
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table848 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table848.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 716
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table848, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table849 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table849.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 719
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table849, "Given ");
#line hidden
#line 722
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 723
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 724
 testRunner.And("the user changes all the phones number of the account to status Written Do Not Ca" +
                        "ll", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 725
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 726
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table850 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table850.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table850.AddRow(new string[] {
                            "MASHPF",
                            "W"});
                table850.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table850.AddRow(new string[] {
                            "MASOPF",
                            "W"});
                table850.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table850.AddRow(new string[] {
                            "MASCPI",
                            "W"});
#line 727
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table850, "Then ");
#line hidden
#line 735
 testRunner.When("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 736
 testRunner.And("the user changes the phone number 6479992222 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 737
 testRunner.And("the user changes the phone number 6479993333 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 738
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 739
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table851 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table851.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table851.AddRow(new string[] {
                            "MASHPF",
                            "B"});
                table851.AddRow(new string[] {
                            "MASOPH",
                            "6479992222"});
                table851.AddRow(new string[] {
                            "MASOPF",
                            "B"});
                table851.AddRow(new string[] {
                            "MASCPN",
                            "6479993333"});
                table851.AddRow(new string[] {
                            "MASCPI",
                            "B"});
#line 740
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table851, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4336")]
        public virtual void CITI_4336()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4336", "Citi Home Work Cell are same and changed to Wrong Number, there is another good H" +
                    "ome in ARx", ((string[])(null)));
#line 751
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table852 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table852.AddRow(new string[] {
                            "6479991111",
                            "J",
                            "6479991111",
                            "J"});
#line 753
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table852, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table853 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table853.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 756
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table853, "Given ");
#line hidden
#line 759
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 760
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 761
 testRunner.And("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 762
 testRunner.And("the user adds a new number 6479994444 with status Active location Home service La" +
                        "ndline", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 763
 testRunner.And("the user creates a call record for phone number 6479994444 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 764
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 765
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table854 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table854.AddRow(new string[] {
                            "MASHPH",
                            "6479994444"});
                table854.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table854.AddRow(new string[] {
                            "MASOPH",
                            "6479991111"});
                table854.AddRow(new string[] {
                            "MASOPF",
                            "B"});
                table854.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table854.AddRow(new string[] {
                            "MASCPI",
                            "B"});
#line 766
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table854, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4355")]
        public virtual void CITI_4355()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4355", "Citi Home Work Cell are same and changed to Wrong Number and then changed to Good" +
                    "", ((string[])(null)));
#line 777
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table855 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table855.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479991111",
                            "A"});
#line 779
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table855, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table856 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table856.AddRow(new string[] {
                            "6479991111",
                            "J"});
#line 782
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table856, "Given ");
#line hidden
#line 785
 testRunner.When("The user drops the file to the UNC path, and the file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 786
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 787
 testRunner.And("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 788
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 789
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table857 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table857.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table857.AddRow(new string[] {
                            "MASHPF",
                            "B"});
                table857.AddRow(new string[] {
                            "MASOPH",
                            "6479991111"});
                table857.AddRow(new string[] {
                            "MASOPF",
                            "B"});
                table857.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table857.AddRow(new string[] {
                            "MASCPI",
                            "B"});
#line 790
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table857, "Then ");
#line hidden
#line 798
 testRunner.When("the user changes the phone number 6479991111 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 799
 testRunner.When("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 800
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table858 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table858.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table858.AddRow(new string[] {
                            "MASHPF",
                            ""});
                table858.AddRow(new string[] {
                            "MASOPH",
                            "6479991111"});
                table858.AddRow(new string[] {
                            "MASOPF",
                            ""});
                table858.AddRow(new string[] {
                            "MASCPN",
                            "6479991111"});
                table858.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 801
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table858, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
