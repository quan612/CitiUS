// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CitiUSTest.FeatureFiles.CitiOutgoingMaintenanceFeatures
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Multiples Phones Updates for BANK")]
    [NUnit.Framework.CategoryAttribute("OutboundMaintenance")]
    [NUnit.Framework.CategoryAttribute("Phones")]
    [NUnit.Framework.CategoryAttribute("MultipleChanges")]
    [NUnit.Framework.CategoryAttribute("epic:84633")]
    public partial class MultiplesPhonesUpdatesForBANKFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "OutboundMaintenance",
                "Phones",
                "MultipleChanges",
                "epic:84633"};
        
#line 1 "PhoneUpdateMultiplesForBANK.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Multiples Phones Updates for BANK", null, ProgrammingLanguage.CSharp, new string[] {
                        "OutboundMaintenance",
                        "Phones",
                        "MultipleChanges",
                        "epic:84633"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("The user creates a Citi NBS based on the sample file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table662 = new TechTalk.SpecFlow.Table(new string[] {
                        "MIOCode",
                        "ListDate"});
            table662.AddRow(new string[] {
                        "BANK",
                        "Yesterday"});
#line 6
 testRunner.And("The user modifies the header record with credentials:", ((string)(null)), table662, "And ");
#line hidden
            TechTalk.SpecFlow.Table table663 = new TechTalk.SpecFlow.Table(new string[] {
                        "LoanTypeCode",
                        "OfficerCode",
                        "MIOCode",
                        "RecovererCode"});
            table663.AddRow(new string[] {
                        "CONS",
                        "433902",
                        "BANK",
                        "GL03"});
#line 9
 testRunner.And("The user modifies the account record in DL file with credentials:", ((string)(null)), table663, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4344")]
        public virtual void CITI_4344()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4344", "Citi Cell is good, agent changes this Cell status to Active and doing multiple ch" +
                    "anges test A1", ((string[])(null)));
#line 14
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table664 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table664.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 16
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table664, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table665 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table665.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 19
 testRunner.Given("ThThe user modifies the X00 record in DL file with credentials:", ((string)(null)), table665, "Given ");
#line hidden
#line 22
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table666 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table666.AddRow(new string[] {
                            "MASHPH"});
                table666.AddRow(new string[] {
                            "MASHPF"});
                table666.AddRow(new string[] {
                            "MASOPH"});
                table666.AddRow(new string[] {
                            "MASOPF"});
                table666.AddRow(new string[] {
                            "MASCPN"});
                table666.AddRow(new string[] {
                            "MASCPI"});
#line 27
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table666, "Then ");
#line hidden
#line 35
 testRunner.When("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table667 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table667.AddRow(new string[] {
                            "MASHPH"});
                table667.AddRow(new string[] {
                            "MASHPF"});
                table667.AddRow(new string[] {
                            "MASOPH"});
                table667.AddRow(new string[] {
                            "MASOPF"});
                table667.AddRow(new string[] {
                            "MASCPN"});
                table667.AddRow(new string[] {
                            "MASCPI"});
#line 38
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table667, "Then ");
#line hidden
#line 46
 testRunner.When("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table668 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table668.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table668.AddRow(new string[] {
                            "MASHPF",
                            "B"});
#line 49
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table668, "Then ");
#line hidden
#line 53
 testRunner.When("the user changes the phone number 6479993333 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.When("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 57
 testRunner.When("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table669 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table669.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table669.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 61
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table669, "Then ");
#line hidden
#line 65
 testRunner.When("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.And("the user creates a call record for phone number 6479991111 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table670 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldCode"});
                table670.AddRow(new string[] {
                            "MASRPH"});
                table670.AddRow(new string[] {
                            "MASRPF"});
#line 69
 testRunner.Then("The records below should not be sent for the account in the file", ((string)(null)), table670, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4345")]
        public virtual void CITI_4345()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4345", "Citi Cell is good, agent changes this Cell status to Active and doing multiple ch" +
                    "anges test A2", ((string[])(null)));
#line 75
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table671 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table671.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 77
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table671, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table672 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table672.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 80
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table672, "Given ");
#line hidden
#line 83
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.When("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 89
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.When("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table673 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table673.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table673.AddRow(new string[] {
                            "MASHPF",
                            "B"});
#line 94
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table673, "Then ");
#line hidden
#line 98
 testRunner.When("the user changes the phone number 6479993333 to status Wireless", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 99
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.When("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 102
 testRunner.When("the user adds a new number 6479996666 with status Wireless location Home service " +
                        "Mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.And("the user creates a call record for phone number 6479996666 with Right Party Conta" +
                        "ct as true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table674 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table674.AddRow(new string[] {
                            "MASCPN",
                            "6479996666"});
                table674.AddRow(new string[] {
                            "MASCPI",
                            "D"});
#line 106
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table674, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CITI_4346")]
        public virtual void CITI_4346()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CITI_4346", "Citi Cell is good, agent changes this Cell status to Active and doing multiple ch" +
                    "anges test A3", ((string[])(null)));
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table675 = new TechTalk.SpecFlow.Table(new string[] {
                            "HomeNumber",
                            "HomeIndicator",
                            "WorkNumber",
                            "WorkIndicator"});
                table675.AddRow(new string[] {
                            "6479991111",
                            "H",
                            "6479992222",
                            "A"});
#line 114
 testRunner.Given("The user modifies the account record in DL file with credentials:", ((string)(null)), table675, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table676 = new TechTalk.SpecFlow.Table(new string[] {
                            "CellNumber",
                            "CellIndicator"});
                table676.AddRow(new string[] {
                            "6479993333",
                            "J"});
#line 117
 testRunner.Given("The user modifies the X00 record in DL file with credentials:", ((string)(null)), table676, "Given ");
#line hidden
#line 120
 testRunner.When("The user drops the file to the client UNC path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 121
 testRunner.And("The file is processed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And("A new account is placed in ARxCollect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.When("the user changes the phone number 6479993333 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 126
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.When("the user changes the phone number 6479991111 to status Wrong Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 129
 testRunner.When("the user changes the phone number 6479991111 to status Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 130
 testRunner.When("the user changes the phone number 6479991111 to status Verbal Do Not Call", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
 testRunner.And("The user generates an outbound maintenance file for BANK_ALL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 132
 testRunner.And("The associated job is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table677 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field Code",
                            "New Value"});
                table677.AddRow(new string[] {
                            "MASHPH",
                            "6479991111"});
                table677.AddRow(new string[] {
                            "MASHPF",
                            "V"});
#line 133
 testRunner.Then("The records are sent in the outbound maintenance file as below:", ((string)(null)), table677, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
